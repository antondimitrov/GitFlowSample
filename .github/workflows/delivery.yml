name: Delivery
on:
  push:
    branches:
    - delivery 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      runPerfTests:
        description: 'Run performance tests'
        type: boolean
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RUN_PERFORMANCE_TESTS: ${{ inputs.runPerfTests }}
jobs:
  new_field_ops_version:
    runs-on: ubuntu-latest
    permissions: write-all
    environment: 'dev'
    strategy:
      fail-fast: true
    name: new_field_ops_version
    steps:
    - name: Trigger all customer upgrades to pre-prod
      run: echo "New version of Field Ops is available. Trigger ONE dispatch  "
  run_system_tests:
    name: Run Integration Tests
    needs: new_field_ops_version
    environment: 'dev'
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Trigger product specific integration tests
      run: echo "Run in combination with latest OTHER product stable versions"
    - name: Trigger security checks specific integration tests
      run: echo "Run in combination with latest OTHER product stable versions "   
  commit_latest_infra:
    name: Restore Latest Infra
    needs: run_system_tests
    environment: 'test'
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Clean up any leftovers of the customer deployment
      run: echo "Clean up any leftovers of the customer deployment"
    - name: Commit latest infra
      run: echo "Commit latest infra"
    - name: Terraform Plan to preview infra changes
      run: echo "Terraform Plan to preview infra changes"
    - name: Terraform Apply to preview infra changes
      run: echo "Terraform Apply to preview infra changes"
    - name: Update version
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.actions.createWorkflowDispatch({
              owner: ${{ github.event.repository.owner }},
              repo: ${{ github.event.repository.name }},
              workflow_id: 'update-version.yml',
              ref: 'delivery'
          });
  restore_sql:
    name: Restore SQL Backup
    needs: [commit_latest_infra]
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Restore the lates SQL
      run: echo "Restore the lates SQL"
  restore_raven:
    name: Restore latest RavenDB
    needs: commit_latest_infra
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Restore the lates RavenDB
      run: echo "Restore the lates RavenDB"
  start_field_ops_and_wire_it_up:
    name: Start Field Ops
    needs: [restore_raven,restore_sql]
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Start Field Ops and wire it up 
      run: echo "Start Field Ops and wite it up"
  deploy_next_version:
    name: Deploy next version
    needs: [restore_raven,restore_sql,start_field_ops_and_wire_it_up]
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Deploy 
      run: echo "Upgrade"
  run_performance_tests:
    name: Run Performance Tests
    needs: [deploy_next_version]
    if: ${{inputs.runPerfTests }}
    environment: 'dev'
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Trigger product specific performance tests
      run: echo "Trigger product specific performance tests"
  switch_traffic:
    name: Switch traffic to new version
    needs: [deploy_next_version]
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Deploy 
      run: echo "Upgrade"
  verify_app_is_running:
    name: Verify application is running
    needs: [switch_traffic]
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Deploy 
      run: echo "Upgrade"
  verify_errors_in_logs:
    name: Verify error logs
    needs: [switch_traffic]
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Deploy 
      run: echo "Upgrade"
  run_customer_tests:
    name: Customer Tests
    needs: [switch_traffic]
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
    steps:
    - name: Deploy 
      run: echo "Upgrade"
  
  
